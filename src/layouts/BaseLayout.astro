---
import { SEO } from "astro-seo";
import { ClientRouter } from "astro:transitions";

import Footer from "@/components/Base/Footer.astro";
import Header from "@/components/Base/Header.astro";
import ClickShatterBlock from "@/components/ui/click-shatter-block";

import "@/styles/global.css";

export type Props = {
  title?: string;
  description?: string;
  image?: string;
};

const {
  title = "うっちーのブログ - Uchii's Blog",
  description = "うっちーの技術ブログ。IchigoJamやプログラミング、Web開発に関する記事を発信しています。",
  image = "/ogp.png",
} = Astro.props as Props;
---

<script is:inline>
  function setDarkMode(document) {
    const getThemePreference = () => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      return window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "theme-light";
    };
    const isDark = getThemePreference() === "dark";
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");

    if (typeof localStorage !== "undefined") {
      const observer = new MutationObserver(() => {
        const isDark = document.documentElement.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "theme-light");
      });
      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ["class"],
      });
    }
  }

  /* ViewTransition導入後にDark modeが正常動作しなくなる問題の修正。参考：https://github.com/shadcn-ui/ui/discussions/3528 */
  setDarkMode(document);

  document.addEventListener("astro:before-swap", (ev) => {
    // Pass the incoming document to set the theme on it
    setDarkMode(ev.newDocument);
  });
  /* ************************* */
</script>

<html lang="ja" class="scroll-smooth">
  <head>
    <SEO
      title={title}
      description={description}
      openGraph={{
        basic: {
          type: "website",
          url: "https://uchii-blog.netlify.app",
          title: title,
          image: image,
        },
        optional: {
          description: description,
        },
      }}
      twitter={{
        card: "summary_large_image",
        // site: "@yoshiki_uchida",
        creator: "@yoshiki_uchida",
        title: title,
        description: description,
        image: image,
        imageAlt: "Uchii's Blog | うっちーのブログ",
      }}
    />

    <!-- IchigoJamフォントのプリロードとプリコネクト -->
    <link rel="preconnect" href="/fonts" crossorigin="anonymous" />
    <link
      rel="preload"
      href="/fonts/IchigoJam-1.4.woff"
      as="font"
      type="font/woff"
      crossorigin="anonymous"
    />

    <!-- Sitemap -->
    <link rel="sitemap" href="/sitemap-index.xml" />

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <ClientRouter />
  </head>
  <body class="border-4">
    <ClickShatterBlock client:load>
      <Header transition:persist />
      <main transition:animate="slide">
        <slot />
      </main>
      <Footer />
    </ClickShatterBlock>
  </body>
</html>

<style>
  /* レトロゲーム風のピクセルトランジション */
  @keyframes pixel-fade-in {
    0% {
      opacity: 0;
      filter: contrast(5) brightness(0);
      transform: scale(0.95) translateY(10px);
    }
    20% {
      filter: contrast(3) brightness(0.3);
    }
    40% {
      filter: contrast(2) brightness(0.6);
    }
    60% {
      filter: contrast(1.5) brightness(0.8);
    }
    100% {
      opacity: 1;
      filter: contrast(1) brightness(1);
      transform: scale(1) translateY(0);
    }
  }

  @keyframes pixel-fade-out {
    0% {
      opacity: 1;
      filter: contrast(1) brightness(1);
      transform: scale(1) translateY(0);
    }
    40% {
      filter: contrast(1.5) brightness(1.2);
    }
    60% {
      filter: contrast(2) brightness(0.6);
    }
    80% {
      filter: contrast(3) brightness(0.3);
    }
    100% {
      opacity: 0;
      filter: contrast(5) brightness(0);
      transform: scale(0.95) translateY(-10px);
    }
  }

  @keyframes retro-slide-in {
    0% {
      transform: translateX(100%);
      filter: brightness(2) contrast(2) blur(2px);
    }
    50% {
      filter: brightness(1.5) contrast(1.5) blur(1px);
    }
    100% {
      transform: translateX(0);
      filter: brightness(1) contrast(1) blur(0);
    }
  }

  @keyframes retro-slide-out {
    0% {
      transform: translateX(0);
      filter: brightness(1) contrast(1) blur(0);
    }
    50% {
      filter: brightness(0.5) contrast(1.5) blur(1px);
    }
    100% {
      transform: translateX(-100%);
      filter: brightness(0) contrast(2) blur(2px);
    }
  }

  /* 8ビットゲーム風グリッチエフェクト */
  @keyframes glitch-effect {
    0%,
    100% {
      transform: translate(0);
      filter: hue-rotate(0deg);
    }
    10% {
      transform: translate(-2px, 2px);
      filter: hue-rotate(90deg) saturate(2);
    }
    20% {
      transform: translate(-2px, -2px);
      filter: hue-rotate(180deg) saturate(0.5);
    }
    30% {
      transform: translate(2px, 2px);
      filter: hue-rotate(270deg) saturate(1.5);
    }
    40% {
      transform: translate(2px, -2px);
      filter: hue-rotate(360deg) saturate(1);
    }
  }

  /* デフォルトのスライドアニメーションをレトロ風に上書き */
  ::view-transition-old(slide) {
    animation: retro-slide-out 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  ::view-transition-new(slide) {
    animation: retro-slide-in 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* フェードアニメーションをピクセル風に上書き */
  ::view-transition-old(fade) {
    animation: pixel-fade-out 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  ::view-transition-new(fade) {
    animation: pixel-fade-in 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* ブログカード専用のトランジション */
  ::view-transition-old(blog-card) {
    animation: pixel-fade-out 0.3s ease-out;
  }

  ::view-transition-new(blog-card) {
    animation: pixel-fade-in 0.3s ease-out;
  }

  /* ページ全体のトランジション */
  ::view-transition-old(page-content) {
    animation:
      glitch-effect 0.3s ease-out,
      pixel-fade-out 0.4s ease-out;
  }

  ::view-transition-new(page-content) {
    animation: pixel-fade-in 0.4s ease-out;
  }

  /* スケールアニメーション */
  @keyframes scale-down {
    to {
      opacity: 0;
      transform: scale(0.8);
    }
  }

  @keyframes scale-up {
    from {
      opacity: 0;
      transform: scale(1.2);
    }
  }

  /* アクセシビリティ: モーション設定を尊重 */
  @media (prefers-reduced-motion: reduce) {
    ::view-transition-group(*),
    ::view-transition-old(*),
    ::view-transition-new(*) {
      animation: none !important;
    }
  }
</style>
